definitions:
  config.AppConfig:
    properties:
      appKeyLength:
        type: integer
      appSecretLength:
        type: integer
      screenShotLimit:
        description: VersionNumberLimit int   `mapstructure:"version-number-limit"
          json:"versionNumberLimit" yaml:"version-number-limit"`
        type: integer
      tidCountNumber:
        type: integer
      xmlPath:
        type: string
      xmlPathPush:
        type: string
      xmlPathTemplate:
        type: string
    type: object
  config.CORS:
    properties:
      mode:
        type: string
      whitelist:
        items:
          $ref: '#/definitions/config.CORSWhitelist'
        type: array
    type: object
  config.CORSWhitelist:
    properties:
      allow-credentials:
        type: boolean
      allow-headers:
        type: string
      allow-methods:
        type: string
      allow-origin:
        type: string
      expose-headers:
        type: string
    type: object
  config.Captcha:
    properties:
      imgHeight:
        type: integer
      imgWidth:
        type: integer
      keyLong:
        description: code length
        type: integer
    type: object
  config.Casbin:
    properties:
      modelPath:
        description: exist  put casbin model of path
        type: string
    type: object
  config.CertificateConfig:
    properties:
      certificateFile:
        type: string
      keyFile:
        type: string
    type: object
  config.Detail:
    properties:
      compareField:
        description: when a comparison is requiredbetweenoffield
        type: string
      interval:
        description: time between interval
        type: string
      tableName:
        description: need cleaningoftable Name
        type: string
    type: object
  config.Email:
    properties:
      from:
        description: address
        type: string
      host:
        description: serverAddress
        type: string
      isSSL:
        description: yes no SSL
        type: boolean
      nickname:
        description: nickname
        type: string
      port:
        description: port
        type: integer
      secret:
        description: key
        type: string
      to:
        description: address:many individual in english language comma separated
        type: string
    type: object
  config.EmailTemplate:
    properties:
      from:
        type: string
      smtpHost:
        type: string
      smtpPass:
        type: string
      smtpPort:
        type: integer
      smtpUser:
        type: string
      to:
        type: string
    type: object
  config.Excel:
    properties:
      dir:
        type: string
      dirTemplate:
        type: string
    type: object
  config.FDSConfig:
    properties:
      fdsPath:
        type: string
      outFdsPath:
        type: string
      path:
        type: string
    type: object
  config.JWT:
    properties:
      bufferTime:
        description: buffer time
        type: string
      expiresTime:
        description: expiration
        type: string
      issuer:
        description: sign origin
        type: string
      signingKey:
        description: jwt sign name
        type: string
    type: object
  config.Language:
    properties:
      dir:
        type: string
      language:
        type: string
    type: object
  config.LdapConfig:
    properties:
      baseDN:
        type: string
      bindBN:
        type: string
      bindPassword:
        type: string
      filter:
        type: string
      host:
        type: string
      port:
        type: string
    type: object
  config.Local:
    properties:
      download:
        type: string
      path:
        description: local file path
        type: string
    type: object
  config.LoggerPath:
    properties:
      dir:
        type: string
    type: object
  config.MPush:
    properties:
      url:
        type: string
    type: object
  config.MenuTranslator:
    properties:
      dir:
        type: string
    type: object
  config.Mysql:
    properties:
      config:
        description: advanced configure
        type: string
      dbName:
        description: database name
        type: string
      limitRecords:
        type: integer
      logMode:
        description: yes no turn on Gorm global log
        type: string
      logZap:
        description: yes no by zap write log file
        type: boolean
      maxIdleConns:
        description: null idle of max number of connections
        type: integer
      maxOpenConns:
        description: open arrive database of max number of connections
        type: integer
      password:
        description: database password
        type: string
      path:
        description: server address
        type: string
      rPort:
        type: string
      username:
        description: database username
        type: string
      wPort:
        description: port
        type: string
    type: object
  config.MysqlInfo:
    properties:
      path:
        description: server address
        type: string
      rPort:
        type: string
      wPort:
        description: port
        type: string
    type: object
  config.Redis:
    properties:
      addr:
        description: server address :port
        type: string
      db:
        description: redis of where individual database
        type: integer
      password:
        description: password
        type: string
    type: object
  config.RedisCluster:
    properties:
      addr:
        description: server address :port
        type: string
      db:
        description: redis of where individual database
        type: integer
      password:
        description: password
        type: string
    type: object
  config.Server:
    properties:
      appConfig:
        allOf:
        - $ref: '#/definitions/config.AppConfig'
        description: Application
      captcha:
        $ref: '#/definitions/config.Captcha'
      casbin:
        $ref: '#/definitions/config.Casbin'
      certificateConfig:
        allOf:
        - $ref: '#/definitions/config.CertificateConfig'
        description: Certificate Files
      cors:
        allOf:
        - $ref: '#/definitions/config.CORS'
        description: cross domain configure
      email:
        $ref: '#/definitions/config.Email'
      emailTemplate:
        $ref: '#/definitions/config.EmailTemplate'
      excel:
        $ref: '#/definitions/config.Excel'
      fds:
        $ref: '#/definitions/config.FDSConfig'
      jwt:
        $ref: '#/definitions/config.JWT'
      language:
        allOf:
        - $ref: '#/definitions/config.Language'
        description: added  to support multi-language
      ldapConfig:
        $ref: '#/definitions/config.LdapConfig'
      local:
        allOf:
        - $ref: '#/definitions/config.Local'
        description: |-
          Pgsql  Pgsql `mapstructure:"pgsql" json:"pgsql" yaml:"pgsql"`
          DBList []DB  `mapstructure:"db-list" json:"db-list" yaml:"db-list"`
          oss
      loggerPath:
        $ref: '#/definitions/config.LoggerPath'
      mPush:
        allOf:
        - $ref: '#/definitions/config.MPush'
        description: mPush
      menuTranslator:
        $ref: '#/definitions/config.MenuTranslator'
      mysql:
        $ref: '#/definitions/config.Mysql'
      mysqlInfo:
        allOf:
        - $ref: '#/definitions/config.MysqlInfo'
        description: gorm
      redis:
        $ref: '#/definitions/config.Redis'
      redisRead:
        $ref: '#/definitions/config.RedisCluster'
      system:
        $ref: '#/definitions/config.System'
      terminalLocation:
        $ref: '#/definitions/config.TerminalLocationConfig'
      timer:
        $ref: '#/definitions/config.Timer'
      tms:
        $ref: '#/definitions/config.TMSConfig'
      userConfig:
        $ref: '#/definitions/config.UserConfig'
      zap:
        $ref: '#/definitions/config.Zap'
    type: object
  config.System:
    properties:
      UiResetPasswordFail:
        type: string
      addr:
        description: Addr                    int    `mapstructure:"addr" json:"addr"
          yaml:"addr"`
        type: string
      backendPath:
        type: string
      dbType:
        description: database type of:mysql(default)|sqlite|sql server|postgresql
        type: string
      env:
        description: env value
        type: string
      environment:
        description: For database and redis
        type: string
      grpcPort:
        description: port value
        type: string
      ipLimitCount:
        type: integer
      ipLimitTime:
        type: integer
      ossType:
        description: Oss type of
        type: string
      serverPath:
        type: string
      uiConfirmEmailFail:
        type: string
      uiConfirmEmailRedirect:
        type: string
      uiResetPasswordRedirect:
        type: string
      uiServerPath:
        type: string
      useMultiPoint:
        description: many click login
        type: boolean
      useRedis:
        description: use redis
        type: boolean
      wsPort:
        type: string
    type: object
  config.TMSConfig:
    properties:
      alarmReceiverEmailMax:
        type: integer
      allowMarketUseSSO:
        type: boolean
      allowReleaseNote:
        type: boolean
      allowResellerTid:
        type: boolean
      allowUserChangeEmail:
        type: boolean
      apkFileMaxSize:
        type: integer
      appMaxPrice:
        type: number
      assertImportLimit:
        type: integer
      checkPushHistory:
        type: boolean
      developerRegistrationFee:
        type: integer
      firmwareFileMaxSize:
        type: integer
      firmwareModemFileMaxSize:
        type: integer
      firmwareResourceFileMaxSize:
        type: integer
      globalProvinceFlag:
        type: boolean
      groupMaxTerminalCount:
        type: integer
      groupPushTerminalLimit:
        type: integer
      groupTerminalImportLimitTotal:
        type: integer
      groupVariableImportLimit:
        type: integer
      importExcelFileMaxSize:
        type: integer
      linkExpirationHour:
        type: integer
      logCatEnable:
        type: boolean
      marketMaxTerminalCount:
        type: integer
      marketVariableImportLimit:
        type: integer
      maxNumOfTerminalsInOnePurchase:
        type: integer
      merchantCategoryImportLimit:
        type: integer
      merchantExportLimitTotal:
        type: integer
      merchantImportLimit:
        type: integer
      merchantVariableImportLimit:
        type: integer
      onlineMaxApkCount:
        type: integer
      pageLimit:
        type: integer
      paxFactoryDefaultId:
        type: integer
      pedKeyStatusEnable:
        type: boolean
      registerUserEnable:
        type: boolean
      reportMaxExportFieldSize:
        type: integer
      reportRecordExportLimit:
        type: integer
      resellerExportLimitTotal:
        type: integer
      rkiAuthSystemEnabled:
        type: boolean
      showHiddenConfig:
        type: boolean
      showServiceAgreement:
        type: boolean
      signatureSupported:
        type: boolean
      terminalExportLimitTotal:
        type: integer
      terminalImportLimitTotal:
        type: integer
      terminalOfflineExportLimitTotal:
        type: integer
      terminalVariableImportLimit:
        type: integer
      thirdPartySysIpBindLimitDate:
        type: integer
      thirdPartySysIpLimit:
        type: integer
    type: object
  config.TerminalLocationConfig:
    properties:
      externalApiUrl:
        type: string
      tokenKey:
        type: string
    type: object
  config.Timer:
    properties:
      detail:
        items:
          $ref: '#/definitions/config.Detail'
        type: array
      spec:
        description: CRON table expression
        type: string
      start:
        description: yesnostart
        type: boolean
    type: object
  config.UserConfig:
    properties:
      authorityCode:
        type: integer
      ipAddressBlockNum:
        type: integer
      ipAddressBlockTime:
        type: string
      lastPasswordChangeNum:
        type: integer
      loginAttemptCountTime:
        type: string
      passwordExpired:
        type: integer
      resetPasswordLength:
        type: integer
      statusFalse:
        type: string
      statusTrue:
        type: string
      userBlockNum:
        type: integer
      userBlockTime:
        type: string
    type: object
  config.Zap:
    properties:
      director:
        description: log file folder
        type: string
      encodeLevel:
        description: edit code level
        type: string
      format:
        description: format
        type: string
      level:
        description: level
        type: string
      logInConsole:
        description: format console
        type: boolean
      max-age:
        type: integer
      prefix:
        description: log before prefix
        type: string
      showLine:
        description: show row
        type: boolean
      stacktraceKey:
        description: stack name
        type: string
    type: object
  report.ReportParameterDTO:
    properties:
      alisa:
        type: string
      dataSourceDepend:
        description: maybe id with table
        type: string
      defaultValue:
        type: string
      description:
        type: string
      name:
        type: string
      paramType:
        type: string
      reportId:
        type: integer
      required:
        type: boolean
      uiComponentType:
        type: integer
      willRefreshOtherParamOnChange:
        type: boolean
    type: object
  report.ReportTaskDTO:
    properties:
      customReportName:
        type: string
      emailTo:
        description: send email
        type: string
      exportFormat:
        type: string
      immediate:
        type: boolean
      jobName:
        type: string
      reportId:
        type: integer
      reportName:
        type: string
      reportParameter: {}
    type: object
  report.ReportUiComponent:
    properties:
      createdAt:
        type: string
      id:
        description: primary key ID
        type: integer
      label:
        type: string
      lazy:
        type: boolean
      name:
        type: string
      requireDataSource:
        type: boolean
      supportDependOn:
        type: boolean
      updatedAt:
        type: string
    type: object
  request.AddGroupToTerminal:
    properties:
      groupId:
        type: integer
      terminalId:
        items:
          type: integer
        type: array
    type: object
  request.AddTerminalsToGeneralGroup:
    properties:
      groupID:
        type: integer
      serialNos:
        items:
          type: string
        type: array
    required:
    - groupID
    - serialNos
    type: object
  request.AppUninstall:
    properties:
      applicationName:
        type: string
      packageName:
        type: string
      serialNo:
        type: string
      terminalID:
        type: integer
      versionCode:
        type: integer
      versionName:
        type: string
    type: object
  request.AppVersion:
    properties:
      appId:
        minimum: 1
        type: integer
      appVersionName:
        maxLength: 50
        minLength: 1
        type: string
    required:
    - appId
    - appVersionName
    type: object
  request.ApplicationUpdateDTO:
    properties:
      appCategory:
        items:
          type: integer
        type: array
      appName:
        type: string
      appPrice:
        type: boolean
      baseType:
        description: p |s
        type: string
      description:
        type: string
      expirationDate:
        type: string
      isApplicationManager:
        type: boolean
      models:
        items:
          type: integer
        type: array
      releaseNotes:
        type: string
      screenShot:
        description: |-
          ParseDataFiles  []ParseDataFile `json:"dataFiles,omitempty" form:"dataFiles"`
          ParseParametersFile []ParametersFile     `json:"parametersFile" form:"parametersFile"`
        items:
          $ref: '#/definitions/request.ParametersFile'
        type: array
      shortDescription:
        type: string
    type: object
  request.AuthorityRequest:
    properties:
      authorityId:
        type: string
      authorityName:
        type: string
      privilegeIds:
        items:
          type: integer
        type: array
    required:
    - authorityId
    - authorityName
    type: object
  request.BatchMoveTerminal:
    properties:
      merchantId:
        type: integer
      orgId:
        type: integer
      terminalId:
        items:
          type: integer
        type: array
    type: object
  request.ChangePassword:
    properties:
      confirmPassword:
        type: string
      newPassword:
        description: ',alphanumunicode'
        maxLength: 32
        minLength: 8
        type: string
      oldPassword:
        type: string
    required:
    - confirmPassword
    - newPassword
    - oldPassword
    type: object
  request.ChangeUserInfo:
    properties:
      headerImg:
        type: string
      phone:
        type: string
    type: object
  request.DataFile:
    properties:
      dataFile:
        items:
          $ref: '#/definitions/request.ParseDataFile'
        type: array
    type: object
  request.ExpirePassword:
    properties:
      confirmPassword:
        type: string
      email:
        type: string
      newPassword:
        description: ',alphanumunicode'
        maxLength: 32
        minLength: 8
        type: string
      oldPassword:
        type: string
    required:
    - confirmPassword
    - email
    - newPassword
    - oldPassword
    type: object
  request.FileDetails:
    properties:
      files:
        items:
          $ref: '#/definitions/request.ParametersFile'
        type: array
    type: object
  request.FirmwareUpdate:
    properties:
      expirationDate:
        type: string
      forceUpdate:
        type: boolean
      incrementalPkg:
        type: string
      isShared:
        type: boolean
      models:
        items:
          type: integer
        type: array
      releaseNote:
        type: string
    type: object
  request.ForgetPasswordCaptcha:
    properties:
      captcha:
        type: string
      captchaId:
        type: string
      email:
        type: string
    required:
    - captcha
    - captchaId
    - email
    type: object
  request.IdsReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  request.IdsReqStr:
    properties:
      ids:
        items:
          type: string
        type: array
    type: object
  request.InitDB:
    properties:
      dbName:
        description: database name
        type: string
      dbType:
        description: database type
        type: string
      host:
        description: server address
        type: string
      password:
        description: database password
        type: string
      rport:
        type: string
      userName:
        description: database username
        type: string
      wPort:
        description: database connect port
        type: string
    required:
    - dbName
    - userName
    type: object
  request.Login:
    properties:
      captcha:
        description: code
        type: string
      captchaId:
        description: codeID
        type: string
      password:
        description: password
        maxLength: 32
        minLength: 8
        type: string
      username:
        description: username
        type: string
    required:
    - password
    - username
    type: object
  request.OrganizationRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  request.ParamFileDetails:
    properties:
      files:
        items:
          $ref: '#/definitions/request.ParametersFile'
        type: array
    required:
    - files
    type: object
  request.ParameterFileTask:
    properties:
      appID:
        type: integer
      paramFileID:
        type: integer
      pushTaskAppID:
        type: integer
      terminalID:
        type: integer
    required:
    - appID
    - paramFileID
    - pushTaskAppID
    - terminalID
    type: object
  request.ParametersFile:
    properties:
      name:
        type: string
      url:
        type: string
    required:
    - name
    - url
    type: object
  request.ParametersFileDTO:
    properties:
      baseType:
        type: string
      paramFile:
        items:
          $ref: '#/definitions/request.ParametersFile'
        type: array
    type: object
  request.ParseDataFile:
    properties:
      name:
        maxLength: 150
        minLength: 3
        type: string
      url:
        description: ', max=255'
        minLength: 3
        type: string
    required:
    - name
    - url
    type: object
  request.ParsingFile:
    properties:
      fileName:
        maxLength: 150
        minLength: 3
        type: string
      fileUrl:
        maxLength: 255
        minLength: 3
        type: string
    required:
    - fileName
    - fileUrl
    type: object
  request.ParsingFileFirmware:
    properties:
      fileName:
        maxLength: 150
        minLength: 3
        type: string
      fileUrl:
        maxLength: 255
        minLength: 3
        type: string
      formatType:
        maxLength: 100
        minLength: 3
        type: string
    required:
    - fileName
    - fileUrl
    - formatType
    type: object
  request.PasswordRegister:
    properties:
      confirmPassword:
        description: confirm password
        type: string
      password:
        description: password  ,alphanumunicode
        maxLength: 32
        minLength: 8
        type: string
    required:
    - confirmPassword
    - password
    type: object
  request.PushTaskAppDTO:
    properties:
      apps:
        items:
          $ref: '#/definitions/request.AppVersion'
        type: array
      terminalId:
        minimum: 1
        type: integer
    required:
    - terminalId
    type: object
  request.PushTaskAppGroupDTO:
    properties:
      apps:
        items:
          $ref: '#/definitions/request.AppVersion'
        type: array
      terminalGroupId:
        minimum: 1
        type: integer
    required:
    - terminalGroupId
    type: object
  request.PushTaskFirmwareGroupRequest:
    properties:
      firmwareId:
        type: integer
      firmwareVersion:
        type: string
      terminalGroupId:
        type: integer
    required:
    - firmwareId
    - firmwareVersion
    - terminalGroupId
    type: object
  request.PushTaskMessageDTO:
    properties:
      message:
        type: string
      messageTitle:
        type: string
      terminalGroupId:
        type: integer
    required:
    - message
    - messageTitle
    - terminalGroupId
    type: object
  request.PushUninstallApk:
    properties:
      packageName:
        items:
          type: string
        type: array
      terminalGroupID:
        type: integer
    required:
    - packageName
    - terminalGroupID
    type: object
  request.Register:
    properties:
      authorityId:
        maxLength: 20
        type: string
      email:
        type: string
      orgId:
        minimum: 1
        type: integer
      userName:
        maxLength: 30
        type: string
    required:
    - authorityId
    - email
    - orgId
    type: object
  request.SavePushTaskSchema:
    properties:
      appID:
        type: integer
      paramFileID:
        type: integer
      pushTaskAppID:
        type: integer
      schemaP:
        $ref: '#/definitions/tms.ParameterTemplateSchema'
      terminalID:
        type: integer
    required:
    - appID
    - paramFileID
    - pushTaskAppID
    - schemaP
    - terminalID
    type: object
  request.SavePushTaskSchemaGroup:
    properties:
      appID:
        type: integer
      groupID:
        type: integer
      paramFileID:
        type: integer
      pushAppTaskID:
        description: AppPushTaskUUID string `json:"pushTaskAppUUID" form:"pushTaskAppUUID"
          binding:"required"`
        type: integer
      schemaP:
        $ref: '#/definitions/tms.ParameterTemplateSchema'
    required:
    - appID
    - groupID
    - paramFileID
    - pushAppTaskID
    - schemaP
    type: object
  request.SaveTemplateSchema:
    properties:
      pushTemplateId:
        type: integer
      schemaP:
        $ref: '#/definitions/tms.ParameterTemplateSchema'
      templateFileId:
        type: integer
    required:
    - pushTemplateId
    - schemaP
    - templateFileId
    type: object
  request.SetUserAuth:
    properties:
      authorityId:
        description: roleID
        type: string
      userEmail:
        type: string
    type: object
  request.TerminalParameterVariableSearch:
    properties:
      appId:
        type: integer
      createdAfter:
        type: string
      createdBefore:
        type: string
      format:
        description: PDF || Excel
        type: string
      groupId:
        type: integer
      key:
        type: string
      order:
        description: ASC ||  default= DESC|
        type: string
      page:
        description: page number
        type: integer
      pageSize:
        description: page size
        type: integer
      terminalId:
        type: integer
    type: object
  request.UpdatePushTask:
    properties:
      expiredTime:
        description: time.Time
        type: integer
      forceUpdate:
        type: boolean
      parameterFileID:
        description: in case parameter type
        type: integer
      pushImmediately:
        type: boolean
      timeZone:
        type: string
      wifiOnly:
        type: boolean
    type: object
  request.UpdateReleaseNote:
    properties:
      releaseNotes:
        type: string
      versionName:
        type: string
    type: object
  response.PageResult:
    properties:
      items: {}
      page:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
    type: object
  response.Response:
    properties:
      code:
        type: integer
      message:
        type: string
      result: {}
      type:
        type: string
    type: object
  system.System:
    properties:
      config:
        $ref: '#/definitions/config.Server'
    type: object
  tms.APKInstallDTO:
    properties:
      appLabel:
        type: string
      batteryUsage:
        type: integer
      iconUrl:
        type: string
      installedTime:
        type: string
      isDefaultLauncher:
        type: boolean
      isLauncher:
        type: boolean
      lastTimeUpdate:
        description: Update the Version of application
        type: integer
      lastTimeUsed:
        description: Last time terminal used application
        type: integer
      launchCount:
        type: integer
      packageName:
        type: string
      serialNo:
        type: string
      source:
        type: string
      status:
        description: status pending if Admin commit to uninstall this app but terminal
          not install it yet
        type: string
      storageUsage:
        type: integer
      syncDate:
        type: integer
      totalBattery:
        type: number
      totalCpuUsage:
        type: integer
      totalStorage:
        type: integer
      traffic:
        type: integer
      traffic4g:
        type: integer
      traffic4gDay:
        type: integer
      trafficDay:
        type: integer
      uninstallable:
        type: boolean
      versionCode:
        type: integer
      versionName:
        type: string
    type: object
  tms.AppParameterVariableDTO:
    properties:
      appID:
        description: optional
        type: integer
      description:
        type: string
      key:
        maxLength: 50
        minLength: 2
        type: string
      source:
        description: Terminal | Group
        type: string
      type:
        description: TEXT | Password
        type: string
      value:
        type: string
    required:
    - key
    - source
    - type
    type: object
  tms.AppPushTemplateDTO:
    properties:
      appID:
        type: integer
      templateName:
        type: string
      versionName:
        type: string
    required:
    - appID
    - templateName
    - versionName
    type: object
  tms.ApplicationCategoryDTO:
    properties:
      description:
        type: string
      label:
        maxLength: 50
        minLength: 3
        type: string
      parentId:
        type: integer
      value:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - label
    - value
    type: object
  tms.GroupList:
    properties:
      Description:
        type: string
      headerList:
        items:
          $ref: '#/definitions/tms.HeaderList'
        type: array
      order:
        type: integer
      title:
        type: string
    type: object
  tms.HardwareControl:
    properties:
      key:
        type: string
      value:
        type: string
    required:
    - key
    - value
    type: object
  tms.HeaderList:
    properties:
      defaultStyle:
        type: string
      display:
        type: boolean
      displayStyle:
        type: string
      parameterList:
        items:
          $ref: '#/definitions/tms.ParameterList'
        type: array
      title:
        type: string
    type: object
  tms.ManufacturerDTO:
    properties:
      address:
        maxLength: 100
        type: string
      city:
        description: Optional data
        maxLength: 100
        type: string
      contactName:
        maxLength: 50
        minLength: 3
        type: string
      country:
        description: TODO:"binding:"required,iso3166_1_alpha2"
        type: string
      description:
        maxLength: 255
        type: string
      email:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      phone:
        type: string
      postalCode:
        description: binding:"postcode_iso3166_alpha2=GB"
        type: string
      signatureProvider:
        maxLength: 255
        type: string
    required:
    - contactName
    - country
    - email
    - name
    - phone
    type: object
  tms.MerchantDTO:
    properties:
      address:
        description: optional fields
        maxLength: 255
        type: string
      city:
        maxLength: 50
        type: string
      contactName:
        maxLength: 50
        minLength: 3
        type: string
      country:
        description: 'TODO: Validate country ,iso3166_1_alpha2 => code'
        type: string
      description:
        type: string
      email:
        type: string
      fax:
        maxLength: 50
        type: string
      merchantType:
        items:
          type: integer
        type: array
      name:
        maxLength: 50
        minLength: 3
        type: string
      orgId:
        minimum: 1
        type: integer
      phone:
        description: binding:"e164"
        type: string
      postalCode:
        description: binding:"postcode_iso3166_alpha2=GB"
        maxLength: 50
        type: string
    required:
    - contactName
    - country
    - email
    - name
    - orgId
    type: object
  tms.MerchantTypeDTO:
    properties:
      description:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - name
    type: object
  tms.ModelDetails:
    properties:
      description:
        type: string
      factoryModelName:
        maxLength: 100
        type: string
      manufacturerId:
        minimum: 1
        type: integer
      modelURL:
        description: |-
          PN string `json:"pn" form:"pn" gorm:"column:pn" binding:"required,max=32"`
          TODO: Required or not when upload excel
          ScreenResolution string `json:"screenResolution" form:"screenResolution" gorm:"column:screen_resolution" ` //binding:"required"
        type: string
      name:
        maxLength: 50
        minLength: 2
        type: string
      platformId:
        minimum: 1
        type: integer
    required:
    - manufacturerId
    - name
    - platformId
    type: object
  tms.OrganizationDTO:
    properties:
      address:
        maxLength: 255
        type: string
      city:
        maxLength: 100
        type: string
      company:
        maxLength: 100
        type: string
      contactName:
        maxLength: 50
        minLength: 3
        type: string
      country:
        description: 'TODO: Validate country'
        maxLength: 100
        minLength: 2
        type: string
      email:
        description: pax data
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      parentId:
        description: default =0
        type: integer
      phone:
        description: ',e164'
        type: string
      postalCode:
        description: 'binding:"postcode_iso3166_alpha2=GB"  //TODO: Validate postal
          code if not empty'
        type: string
    required:
    - contactName
    - country
    - email
    - name
    - parentId
    - phone
    type: object
  tms.Parameter:
    properties:
      DataType:
        type: string
      Defaultvalue:
        type: string
      Description:
        type: string
      Display:
        type: boolean
      Editable:
        type: boolean
      FileID:
        type: string
      FormPid:
        type: string
      FormPidWithFileId:
        type: string
      GroupID:
        type: string
      Index:
        type: integer
      InputType:
        type: string
      Length:
        type: integer
      MinLength:
        type: integer
      PID:
        type: string
      Readonly:
        type: boolean
      Required:
        type: boolean
      Select:
        type: string
      Separator:
        type: string
      Title:
        type: string
      Type:
        type: string
      URLPid:
        type: string
      changeValue:
        type: boolean
      editableRoles:
        type: string
      oldValue:
        description: For store in logs
        type: string
      paramFileId:
        type: integer
      paramFileName:
        type: string
      source:
        type: string
      uploaded:
        type: boolean
      url:
        type: string
      valueUI:
        description: Field For UI Usage
        type: string
      variableId:
        type: integer
      variableKey:
        type: string
      variableReplaceHolder:
        type: string
    type: object
  tms.ParameterData:
    properties:
      groupList:
        items:
          $ref: '#/definitions/tms.GroupList'
        type: array
      paramTemplateName:
        type: string
    type: object
  tms.ParameterList:
    properties:
      FileID:
        type: string
      GroupID:
        type: string
      Separator:
        type: string
      changeValue:
        type: boolean
      dataType:
        type: string
      defaultValue:
        type: string
      description:
        type: string
      display:
        type: boolean
      editable:
        type: boolean
      editableRoles:
        type: string
      formPid:
        type: string
      formPidWithFileId:
        type: string
      index:
        type: integer
      inputType:
        type: string
      length:
        type: integer
      minLength:
        type: integer
      oldValue:
        description: For store in logs
        type: string
      paramFileId:
        type: string
      paramFileName:
        type: string
      pid:
        type: string
      readOnly:
        type: boolean
      required:
        type: boolean
      select:
        type: string
      selectObj:
        description: For Ui response
      title:
        type: string
      type:
        type: string
      uploaded:
        description: For Ui file Upload or not
        type: boolean
      url:
        type: string
      urlPid:
        type: string
    type: object
  tms.ParameterTemplateSchema:
    properties:
      id:
        type: integer
      schema:
        $ref: '#/definitions/tms.ParameterData'
    type: object
  tms.PlatformTerminalDTO:
    properties:
      description:
        type: string
      format:
        maxLength: 50
        minLength: 2
        type: string
      lang:
        maxLength: 50
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      type:
        maxLength: 50
        type: string
    required:
    - format
    - name
    type: object
  tms.PukDTO:
    properties:
      name:
        type: string
      pukFileId:
        type: integer
      status:
        type: boolean
      url:
        type: string
    type: object
  tms.PushTaskFirmwareDTO:
    properties:
      firmwareId:
        type: integer
      firmwareVersion:
        description: store it in db
        type: string
      terminalId:
        type: integer
    required:
    - firmwareId
    - firmwareVersion
    - terminalId
    type: object
  tms.TInfo:
    properties:
      key:
        type: string
      status:
        description: bool => "1", "0"
        type: string
      switchable:
        description: bool => "1", "0"
        type: string
      syncDate:
        type: integer
      terminalSerialNo:
        type: string
      value:
        type: string
    type: object
  tms.TerminalDTO:
    properties:
      ManufacturerId:
        minimum: 1
        type: integer
      addImmediately:
        description: To Terminal Group
        type: boolean
      description:
        maxLength: 255
        type: string
      endSerialNo:
        type: string
      groups:
        items:
          type: integer
        type: array
      location:
        maxLength: 255
        type: string
      merchantId:
        minimum: 1
        type: integer
      modelId:
        minimum: 1
        type: integer
      name:
        maxLength: 50
        minLength: 3
        type: string
      orgId:
        minimum: 1
        type: integer
      quantity:
        description: gorm:"column:quantity;comment:;"
        type: integer
      serialNo:
        type: string
      tid:
        maxLength: 16
        type: string
    required:
    - ManufacturerId
    - merchantId
    - modelId
    - name
    - orgId
    - serialNo
    type: object
  tms.TerminalGroupDTO:
    properties:
      addSubOrgs:
        type: boolean
      description:
        type: string
      manufacturerId:
        minimum: 1
        type: integer
      merchantIDs:
        description: For dynamic groups
        items:
          type: integer
        type: array
      modelId:
        minimum: 1
        type: integer
      name:
        maxLength: 50
        minLength: 3
        type: string
      orgId:
        minimum: 1
        type: integer
    required:
    - manufacturerId
    - modelId
    - name
    - orgId
    type: object
  tms.TerminalInfoDTO:
    properties:
      TerminalSerialNo:
        type: string
      terminalInfo:
        items:
          $ref: '#/definitions/tms.TInfo'
        type: array
    type: object
info:
  contact: {}
  description: This is a sample Server pets
  title: Swagger Example API
  version: 0.0.1
paths:
  /apkInstalled/createApkInstalled:
    post:
      consumes:
      - application/json
      parameters:
      - description: createApkInstalled
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.APKInstallDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: createApkInstalled
      tags:
      - ApkInstalled
  /apkInstalled/getApkInstalledTerminal:
    get:
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: packageName
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: serialNo
        type: string
      - in: query
        name: terminalId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdApkInstalled
      tags:
      - ApkInstalled
  /apkInstalled/uninstalledApkInstalled:
    delete:
      parameters:
      - description: apk uninstall
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AppUninstall'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "uninstalled Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: uninstalledApkInstalled
      tags:
      - ApkInstalled
  /appCategory/createApplicationCategory:
    post:
      consumes:
      - application/json
      parameters:
      - description: createApplicationCategory
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.ApplicationCategoryDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreateApplicationCategory
      tags:
      - ApplicationCategory
  /appCategory/deleteApplicationCategory/{id}:
    delete:
      parameters:
      - description: deleteApplicationCategory
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deleteApplicationCategory
      tags:
      - ApplicationCategory
  /appCategory/deleteApplicationCategoryByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: batch delete ApplicationCategory
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: batch delete ApplicationCategory
      tags:
      - ApplicationCategory
  /appCategory/exportApplicationCategory:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: label
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: parent
        type: boolean
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: ExportApplicationCategory
      tags:
      - Platform
  /appCategory/findApplicationCategory/{id}:
    get:
      parameters:
      - description: queryByIdApplicationCategory
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdApplicationCategory
      tags:
      - ApplicationCategory
  /appCategory/getApplicationCategoryList:
    get:
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: label
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: parent
        type: boolean
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: pagingApplicationCategoryList
      tags:
      - ApplicationCategory
  /appCategory/updateApplicationCategory/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: app Category id
        in: path
        name: id
        required: true
        type: integer
      - description: updateApplicationCategory
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.ApplicationCategoryDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: '{"code": 7,"message": "Data Conflict","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: updateApplicationCategory
      tags:
      - ApplicationCategory
  /appCategory/updateApplicationCategoryStatus/{id}:
    put:
      parameters:
      - description: app category id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateApplicationCategoryStatus
      tags:
      - ApplicationCategory
  /appParamVar/createAppParamVar:
    post:
      consumes:
      - application/json
      parameters:
      - description: createAppParamVar
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.AppParameterVariableDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: '{"code": 7,"message": "conflict data","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: createAppParamVar
      tags:
      - AppParamVar
  /appParamVar/createTerminalParamVars/{terminalID}:
    post:
      consumes:
      - application/json
      parameters:
      - description: createTerminalParamVars
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/tms.Parameter'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: '{"code": 7,"message": "conflict data","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: createTerminalParamVars
      tags:
      - AppParamVar
  /appParamVar/deleteAppParamVar/{id}:
    delete:
      parameters:
      - description: deleteAppParamVar
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deleteAppParamVar
      tags:
      - AppParamVar
  /appParamVar/deleteAppParamVarByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: batch delete AppParamVar
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: batch delete AppParamVar
      tags:
      - AppParamVar
  /appParamVar/downloadAppVariableTemplate:
    get:
      consumes:
      - multipart/form-data
      parameters:
      - description: templateName
        in: query
        name: fileName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: loadTemplate
      tags:
      - AppParamVar
  /appParamVar/exportAppParamVar:
    get:
      consumes:
      - application/json
      parameters:
      - description: ExportAppParamVar
        in: body
        name: data
        schema:
          $ref: '#/definitions/request.TerminalParameterVariableSearch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: ExportAppParamVar
      tags:
      - TerminalSN
  /appParamVar/findAppParamVar/{id}:
    get:
      parameters:
      - description: queryByIdAppParamVar
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdAppParamVar
      tags:
      - AppParamVar
  /appParamVar/getAppParamVarList:
    get:
      parameters:
      - in: query
        name: appId
        type: integer
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: groupId
        type: integer
      - in: query
        name: key
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: terminalId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: pagingAppParamVarList
      tags:
      - AppParamVar
  /appParamVar/getParamVariableByAppId/{id}:
    get:
      parameters:
      - description: GetParamVariableByAppId
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetParamVariableByAppId
      tags:
      - AppParamVar
  /appParamVar/importAppVariableTemplate:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: templateName
        in: query
        name: fileName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: loadTemplate
      tags:
      - AppParamVar
  /appPushTemplate/createPushTemplate:
    post:
      consumes:
      - application/json
      parameters:
      - description: createPushTemplate
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.AppPushTemplateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: createPushTemplate
      tags:
      - PushTemplate
  /appPushTemplate/deletePushTemplate/{id}:
    delete:
      parameters:
      - description: deleteApplicationPushTemplate
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deleteApplicationPushTemplate
      tags:
      - ApplicationPushTemplate
  /appPushTemplate/deletePushTemplateFile/{id}:
    delete:
      parameters:
      - description: DeletePushTemplateFile
        in: path
        name: id
        required: true
        type: integer
      - description: template id
        in: query
        name: templateID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DeletePushTemplateFile
      tags:
      - ApplicationPushTemplate
  /appPushTemplate/deletePushTemplateFileByIds:
    delete:
      parameters:
      - description: ids
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DeletePushTemplateFileByIDs
      tags:
      - ApplicationPushTemplate
  /appPushTemplate/getPushTemplate/{id}:
    get:
      parameters:
      - description: GetPushTemplateByAppId
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetPushTemplateByAppId
      tags:
      - ApplicationPushTemplate
  /appPushTemplate/getPushTemplateByAppId/{id}:
    get:
      parameters:
      - description: GetPushTemplateByAppId
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetPushTemplateByAppId
      tags:
      - ApplicationPushTemplate
  /appPushTemplate/getPushTemplateList:
    get:
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: templateName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetPushTemplateByAppId
      tags:
      - ApplicationPushTemplate
  /appPushTemplate/saveParameterTemplate:
    put:
      parameters:
      - description: SaveParameterTemplate
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SaveTemplateSchema'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: SaveParameterTemplate
      tags:
      - ApplicationPushTemplate
  /appPushTemplate/savePushParameterTemplate:
    post:
      parameters:
      - description: SaveParameterTemplate
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SaveTemplateSchema'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: savePushParameterTemplate
      tags:
      - ApplicationPushTemplate
  /appPushTemplate/viewPushTemplateSchema/{id}:
    get:
      parameters:
      - description: ViewPushTemplateSchema
        in: path
        name: id
        required: true
        type: integer
      - in: query
        name: fileId
        type: integer
      - description: first template file to generate schema
        in: query
        name: first
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ViewPushTemplateSchema
      tags:
      - ApplicationPushTemplate
  /application/addParamFile/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: AddParameterFile
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ParamFileDetails'
      - description: app id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: AddParameterFile
      tags:
      - Application
  /application/checkAppName:
    get:
      parameters:
      - description: app name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: checkAppName
      tags:
      - Application
  /application/checkParamFile/{appId}:
    get:
      parameters:
      - description: appId
        in: path
        name: appId
        required: true
        type: integer
      - description: paramFileId
        in: query
        name: paramFileId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CheckParamFile
      tags:
      - Application
  /application/countApplicationDownloads:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: countApplicationDownloads
      tags:
      - Application
  /application/deleteAppVersion/{appId}:
    delete:
      parameters:
      - description: app Name
        in: path
        name: appName
        required: true
        type: string
      - description: app version
        in: query
        name: versionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DeleteApplicationVersion
      tags:
      - Application
  /application/deleteApplication/{id}:
    delete:
      parameters:
      - description: deleteApplication
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deleteApplication
      tags:
      - Application
  /application/deleteDataFile/{id}:
    delete:
      parameters:
      - description: id
        in: path
        name: dataFileId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DeleteSuccess","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Delete Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DeleteDataFiles
      tags:
      - Application
  /application/deleteParamFile/{appId}:
    delete:
      parameters:
      - description: appId
        in: path
        name: appId
        required: true
        type: integer
      - description: paramFileId
        in: query
        name: fileId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DeleteSuccess","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Delete Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DeleteParamFile
      tags:
      - Application
  /application/deleteScreenShot/{id}:
    delete:
      parameters:
      - description: id
        in: path
        name: screenshotId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DeleteSuccess","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Delete Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DeleteScreenShot
      tags:
      - Application
  /application/downloadApplication/:appId:
    get:
      parameters:
      - description: DownloadApplication
        in: path
        name: appId
        required: true
        type: string
      - description: DownloadApplication
        in: query
        name: versionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DownloadApplication
      tags:
      - Application
  /application/downloadDataFile/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: data file id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DownloadsDataFile
      tags:
      - Application
  /application/downloadParameterApps/{id}:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetParameterApps
      tags:
      - Application
  /application/findAppVersionList/{id}:
    get:
      parameters:
      - description: queryByIdApplication
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdApplication
      tags:
      - Application
  /application/findApplication/{id}:
    get:
      parameters:
      - description: queryByIdApplication
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdApplication
      tags:
      - Application
  /application/findApplicationByUUID/{uuid}:
    get:
      parameters:
      - description: findApplicationByUUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: findApplicationByUUID
      tags:
      - Application
  /application/getApplicationList:
    get:
      parameters:
      - in: query
        name: appLabel
        type: string
      - in: query
        name: appName
        type: string
      - in: query
        name: appStatus
        type: string
      - in: query
        name: baseType
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: packageName
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: pagingApplicationList
      tags:
      - Application
  /application/getApplicationsByModels:
    get:
      parameters:
      - description: "on"
        in: query
        name: appStatus
        type: string
      - description: "on"
        in: query
        name: appVersionStatus
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - description: For Terminal groups
        in: query
        name: group
        type: boolean
      - in: query
        name: modelID
        type: integer
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetApplicationsByModels
      tags:
      - Application
  /application/getApplicationsDistribute:
    get:
      parameters:
      - in: query
        name: appId
        type: integer
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: getApplicationsDistribute
      tags:
      - Application
  /application/getDataFileByAppId/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: app id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetDataFilesByAppId
      tags:
      - Application
  /application/getParameterFilesApps/{id}:
    get:
      parameters:
      - description: id
        in: path
        name: appId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetParameterApps
      tags:
      - Application
  /application/getParameterTemplateSchema:
    post:
      parameters:
      - in: query
        name: resetToDefault
        type: boolean
      - description: parameter file task
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ParameterFileTask'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetParameterTemplateSchema
      tags:
      - Application
  /application/parsingAppFile/{name}:
    post:
      consumes:
      - application/json
      parameters:
      - description: app name
        in: path
        name: name
        required: true
        type: string
      - description: parsingAppFile
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ParsingFile'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: parsingAppFile
      tags:
      - Application
  /application/updateAppStatus/{id}:
    put:
      parameters:
      - description: UpdateAppStatus
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateAppStatus
      tags:
      - Application
  /application/updateAppVersionStatus/:id:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: versionName
        in: query
        name: versionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateAppVersionStatus
      tags:
      - Application
  /application/updateApplication/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: updateApplication
        in: path
        name: id
        required: true
        type: integer
      - description: updateApplication
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ApplicationUpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: updateApplication
      tags:
      - Application
  /application/updateDataFile/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: UpdateDataFile
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.DataFile'
      - description: app id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateDataFile
      tags:
      - Application
  /application/updateModelsApp/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: app id
        in: path
        name: id
        required: true
        type: integer
      - description: UpdateModelsApp
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateModelsApp
      tags:
      - Application
  /application/updateOrgsApp/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: app id
        in: path
        name: id
        required: true
        type: integer
      - description: UpdateOrgsApp
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateOrgsApp
      tags:
      - Application
  /application/updateParametersFile/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: UpdateParametersFile
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ParametersFileDTO'
      - description: app id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateParametersFile
      tags:
      - Application
  /application/updateReleaseNotesApp/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: updateReleaseNotesApp
        in: path
        name: id
        required: true
        type: integer
      - description: updateReleaseNotesApp
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateReleaseNote'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: updateReleaseNotesApp
      tags:
      - Application
  /application/updateScreenShot/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: UpdateScreenShot
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.FileDetails'
      - description: app id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateScreenShot
      tags:
      - Application
  /authority/createAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: authority id ,authority name
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AuthorityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: create role,return includes system role details
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: create role
      tags:
      - Authority
  /authority/deleteAuthority/{authorityId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: authorityId
        in: path
        name: authorityId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: delete role
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: delete role
      tags:
      - Authority
  /authority/getAuthorityList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: authorityName
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: paging role list,return includes list,total,page number,Quantity
            per page
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: paging role list
      tags:
      - Authority
  /authority/getRandomAuthorityId:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: create role,return includes system role details
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetRandomAuthorityId
      tags:
      - Authority
  /authority/updateAuthority:
    put:
      consumes:
      - application/json
      parameters:
      - description: authorityId, authorityName
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AuthorityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: update role info,return includes system role details
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: update role info
      tags:
      - Authority
  /base/captcha:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: generate code,return includes random number id,base64,code
            length
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: generate code
      tags:
      - Base
  /base/expirePassword:
    put:
      consumes:
      - application/json
      parameters:
      - description: email,oldPassword,newPassword,confirmPassword
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ExpirePassword'
      produces:
      - application/json
      responses:
        "200":
          description: User Expire Password
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: User ExpirePassword
      tags:
      - SysUser
  /base/forgetPassword:
    post:
      parameters:
      - description: email,captcha,captchaId
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ForgetPasswordCaptcha'
      produces:
      - application/json
      responses:
        "200":
          description: resetUser password
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: resetUser password
      tags:
      - SysUser
  /base/login:
    post:
      parameters:
      - description: username, password, code
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: return includes user info,token,expiration
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User login
      tags:
      - Base
  /base/passwordConfirm/{verificationCode}:
    put:
      parameters:
      - description: email,password,confirmPassword
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PasswordRegister'
      produces:
      - application/json
      responses:
        "200":
          description: User registered account,return includes user info
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: passwordConfirm
      tags:
      - SysUser
  /base/resetPassword/{token}:
    put:
      parameters:
      - description: token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: reset User password
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ResetPasswordConfirm
      tags:
      - SysUser
  /excel/downloadTemplate:
    get:
      consumes:
      - multipart/form-data
      parameters:
      - description: templateName
        in: query
        name: fileName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: loadTemplate
      tags:
      - excel
  /fileUploadAndDownload/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: uploadFile
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: uploadFile,return includes file details
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: uploadFile
      tags:
      - FileUploadAndDownload
  /fileUploadAndDownload/uploadFirmware:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: UploadFirmwareFile
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: upload file,return includes file details
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UploadFirmwareFile
      tags:
      - UploadFirmwareFile
  /firmware/countFirmwareDownloads:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: countFirmwareDownloads
      tags:
      - Firmware
  /firmware/deleteFirmware/{id}:
    delete:
      parameters:
      - description: firmware id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deleteFirmware
      tags:
      - Firmware
  /firmware/downloadFirmware/{fwId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: firmware id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DownloadFirmware
      tags:
      - Firmware
  /firmware/findFirmware/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: queryByIdFirmware
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdFirmware
      tags:
      - Firmware
  /firmware/getFirmwareList:
    get:
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: modelID
        type: integer
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: packageType
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: platform
        type: string
      - in: query
        name: status
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: pagingFirmwareList
      tags:
      - Firmware
  /firmware/getFirmwareModels/:id:
    get:
      parameters:
      - description: firmware id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetFirmwareModels
      tags:
      - Firmware
  /firmware/parsingFWFile:
    post:
      consumes:
      - application/json
      parameters:
      - description: ParsingFirmware
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ParsingFileFirmware'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ParsingFirmware
      tags:
      - Firmware
  /firmware/updateFirmware/:id:
    put:
      parameters:
      - description: firmware id
        in: path
        name: id
        required: true
        type: integer
      - description: firmware update
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.FirmwareUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateFirmware
      tags:
      - Firmware
  /firmware/updateFirmwareStatus/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: UpdateFirmwareStatus
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateFirmwareStatus
      tags:
      - Firmware
  /init/checkdb:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: initialization User database
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      summary: initializationUser database
      tags:
      - CheckDB
  /init/initdb:
    post:
      parameters:
      - description: initialization databaseParameter
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.InitDB'
      produces:
      - application/json
      responses:
        "200":
          description: initializationUser database
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
        "409":
          description: database already exist
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Parameter verification failed
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: initializationUser database
      tags:
      - InitDB
  /log/getParameterLogList:
    get:
      parameters:
      - in: query
        name: appId
        type: integer
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: '=key #{}'
        in: query
        name: defaultValue
        type: string
      - in: query
        name: fileSchemaId
        type: integer
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: operationType
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: pushTaskId
        type: integer
      - in: query
        name: source
        type: string
      - in: query
        name: terminalId
        type: integer
      - in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetParameterLogList
      tags:
      - log
  /manufacturer/UpdateManufacturerStatus/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Manufacturer id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateManufacturerStatus
      tags:
      - Manufacturer
  /manufacturer/createManufacturer:
    post:
      consumes:
      - application/json
      parameters:
      - description: createManufacturer
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.ManufacturerDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: '{"code": 7,"message": "conflict data","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: createManufacturer
      tags:
      - Manufacturer
  /manufacturer/deleteManufacturer/{id}:
    delete:
      parameters:
      - description: Manufacturer id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deleteManufacturer
      tags:
      - Manufacturer
  /manufacturer/exportManufacturerExcel:
    get:
      consumes:
      - Application/json
      parameters:
      - in: query
        name: country
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - in: query
        name: email
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: phone
        type: string
      - description: platform=Android|monitor|prolin
        in: query
        name: platform
        type: string
      - in: query
        name: status
        type: string
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: exportManufacturerExcel
      tags:
      - Manufacturer
  /manufacturer/findManufacturer/{id}:
    get:
      parameters:
      - description: queryByIdManufacturer
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdManufacturer
      tags:
      - Manufacturer
  /manufacturer/getManufacturerList:
    get:
      consumes:
      - Application/json
      parameters:
      - in: query
        name: country
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - in: query
        name: email
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: phone
        type: string
      - description: platform=Android|monitor|prolin
        in: query
        name: platform
        type: string
      - in: query
        name: status
        type: string
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: GetManufacturerList
      tags:
      - Manufacturer
  /manufacturer/updateManufacturer/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: updateManufacturer
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.ManufacturerDTO'
      - description: Manufacturer id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: updateManufacturer
      tags:
      - Manufacturer
  /menu/getMenuAuthority/:authorityId:
    get:
      consumes:
      - application/json
      parameters:
      - description: authority id
        in: path
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: get specify role menu
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get specify role menu
      tags:
      - Menu
  /menu/getMenuList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: hideMenu
        type: boolean
      - in: query
        name: lang
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: static
        type: boolean
      - in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: paging base menu list,return includes list,total,page number,Quantity
            per page
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: paging base menu list
      tags:
      - Menu
  /merchant/batchMerchantDisable:
    put:
      consumes:
      - application/json
      parameters:
      - description: Batch Merchant Disable
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: batchMerchantDisable
      tags:
      - Merchant
  /merchant/createMerchant:
    post:
      consumes:
      - application/json
      parameters:
      - description: createMerchant
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.MerchantDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: '{"code": 7,"message": "conflict data","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: createMerchant
      tags:
      - Merchant
  /merchant/deleteMerchant/{id}:
    delete:
      parameters:
      - description: Merchant id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deleteMerchant
      tags:
      - Merchant
  /merchant/deleteMerchantByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: batch delete Merchant
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: batch delete Merchant
      tags:
      - Merchant
  /merchant/downloadMerchantTemplate:
    get:
      consumes:
      - multipart/form-data
      parameters:
      - description: templateName
        in: query
        name: fileName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: loadMerchantTemplate
      tags:
      - Merchant
  /merchant/exportMerchantExcel:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: country
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - in: query
        name: email
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: phone
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: exportMerchantExcel
      tags:
      - Merchant
  /merchant/findMerchant/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Merchant id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdMerchant
      tags:
      - Merchant
  /merchant/getMerchantList:
    get:
      parameters:
      - in: query
        name: country
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - in: query
        name: email
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: phone
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: pagingMerchantList
      tags:
      - Merchant
  /merchant/importMerchantExcel:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: ImportMerchantExcel
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: ImportMerchantExcel
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: failed to receive file
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ImportMerchantExcel
      tags:
      - Merchant
  /merchant/updateMerchant/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: updateMerchant
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.MerchantDTO'
      - description: Merchant id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: updateMerchant
      tags:
      - Merchant
  /merchant/updateMerchantStatus/{id}:
    put:
      description: UpdateMerchantStatus
      parameters:
      - description: UpdateMerchantStatus
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "UpdateSuccess","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Update Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateMerchantStatus
      tags:
      - Merchant
  /merchantType/createMerchantType:
    post:
      consumes:
      - application/json
      parameters:
      - description: createMerchantType
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.MerchantTypeDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: '{"code": 7,"message": "conflict data","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: createMerchantType
      tags:
      - MerchantType
  /merchantType/deleteMerchantType/{id}:
    delete:
      parameters:
      - description: merchantType id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "delete fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deleteMerchantType
      tags:
      - MerchantType
  /merchantType/deleteMerchantTypeByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: batch delete MerchantType
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "delete fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: batch delete MerchantType
      tags:
      - MerchantType
  /merchantType/exportMerchantTypeExcel:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: exportMerchantTypeExcel
      tags:
      - MerchantType
  /merchantType/getMerchantTypeList:
    get:
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: pagingMerchantTypeList
      tags:
      - MerchantType
  /merchantType/updateMerchantType/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: merchantType id
        in: path
        name: id
        required: true
        type: integer
      - description: updateMerchantType
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.MerchantTypeDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: '{"code": 7,"message": "conflict data","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "delete fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: updateMerchantType
      tags:
      - MerchantType
  /model/createModel:
    post:
      consumes:
      - application/json
      parameters:
      - description: createModel
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.ModelDetails'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: '{"code": 7,"message": "conflict data","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: createModel
      tags:
      - Model
  /model/deleteModel/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: deleteModel
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deleteModel
      tags:
      - Model
  /model/deleteModelByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: batch delete Model
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: batch delete Model
      tags:
      - Model
  /model/downloadModelTemplate:
    get:
      consumes:
      - multipart/form-data
      parameters:
      - description: template name
        in: query
        name: fileName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: load Model template
      tags:
      - model
  /model/exportModelExcel:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: manufacturerId
        type: integer
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: platformId
        type: integer
      - in: query
        name: pn
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: '{"code": 7,"message": "data excel fail","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: exportModelExcel
      tags:
      - Model
  /model/findModel/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: model id
        in: path
        name: data
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdModel
      tags:
      - Model
  /model/getModelList:
    get:
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: manufacturerId
        type: integer
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: platformId
        type: integer
      - in: query
        name: pn
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: pagingModelList
      tags:
      - Model
  /model/importModelExcel:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: ImportModelExcel
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: ImportModelExcel
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "data excel fail","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ImportModelExcel
      tags:
      - model
  /model/updateModelStatus/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: updateModelStatus
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: updateModel
      tags:
      - Model
  /organization/createOrganization:
    post:
      consumes:
      - application/json
      description: createOrganization
      parameters:
      - description: createOrganization
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.OrganizationDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "CreateSuccess","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "badRequest","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: '{"code": 7,"message": "Conflict fields","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "CreateFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: createOrganization
      tags:
      - Organization
  /organization/deleteOrganization/{id}:
    delete:
      description: deleteOrganization
      parameters:
      - description: deleteOrganization
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "deleteSuccess","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: '{"code": 7,"message": "deleteConflict","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "deleteFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deleteOrganization
      tags:
      - Organization
  /organization/exportOrganizationExcel:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: country
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - in: query
        name: email
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: hasSubOrg
        type: boolean
      - in: query
        name: list
        type: boolean
      - in: query
        name: move
        type: boolean
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - in: query
        name: orgIdMerchant
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: phone
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: '{"code": 7,"message": "data excel fail","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ExportOrganizationExcel
      tags:
      - Organization
  /organization/findOrganization/{id}:
    get:
      parameters:
      - description: queryByIdOrganization
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdOrganization
      tags:
      - Organization
  /organization/getOrganizationList:
    get:
      description: pagingOrganizationList
      parameters:
      - in: query
        name: country
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - in: query
        name: email
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: hasSubOrg
        type: boolean
      - in: query
        name: list
        type: boolean
      - in: query
        name: move
        type: boolean
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - in: query
        name: orgIdMerchant
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: phone
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: pagingOrganizationList
      tags:
      - Organization
  /organization/getOrganizationTree:
    get:
      description: pagingOrganizationList
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: pagingOrganizationList
      tags:
      - Organization
  /organization/updateOrgEmail/{id}:
    put:
      consumes:
      - application/json
      description: UpdateOrgEmail
      parameters:
      - description: UpdateOrgEmail
        in: path
        name: id
        required: true
        type: integer
      - description: UpdateOrgEmail
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.OrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "UpdateSuccess","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: '{"code": 7,"message": "conflict data","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateOrgEmail
      tags:
      - Organization
  /organization/updateOrgStatus/{id}:
    put:
      description: UpdateOrgStatus
      parameters:
      - description: UpdateOrgStatus
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "UpdateSuccess","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Update Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateOrgStatus
      tags:
      - Organization
  /organization/updateOrganization/{id}:
    put:
      consumes:
      - application/json
      description: updateOrganization
      parameters:
      - description: updateOrganization
        in: path
        name: id
        required: true
        type: integer
      - description: updateOrganization
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.OrganizationDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "updateSuccess","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "badRequest","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: '{"code": 7,"message": "conflict fields","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "update Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: updateOrganization
      tags:
      - Organization
  /platformTerminal/createPlatformTerminal:
    post:
      consumes:
      - application/json
      parameters:
      - description: createPlatformTerminal
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.PlatformTerminalDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: createPlatformTerminal
      tags:
      - PlatformTerminal
  /platformTerminal/deletePlatformTerminal/{id}:
    delete:
      parameters:
      - description: platform id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deletePlatformTerminal
      tags:
      - PlatformTerminal
  /platformTerminal/exportPlatformExcel:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: exportPlatformExcel
      tags:
      - Platform
  /platformTerminal/findPlatformTerminal/{id}:
    get:
      parameters:
      - description: platform id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdPlatformTerminal
      tags:
      - PlatformTerminal
  /platformTerminal/getPlatformTerminalList:
    get:
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: pagingPlatformTerminalList
      tags:
      - PlatformTerminal
  /platformTerminal/updatePlatformStatus/{id}:
    put:
      parameters:
      - description: updatePlatformStatus
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: updatePlatform
      tags:
      - PlatformTerminal
  /puk/createPuk:
    post:
      consumes:
      - application/json
      parameters:
      - description: CreatePuk
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.PukDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: '{"code": 7,"message": "conflict data","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreatePuk
      tags:
      - Puk
  /puk/deletePuk/{id}:
    delete:
      parameters:
      - description: DeletePuk
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DeletePuk
      tags:
      - Puk
  /puk/findPuk/{id}:
    get:
      parameters:
      - description: puk id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdPuk
      tags:
      - Puk
  /pushTask/pushGroupStatics/{taskId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: PushMessage
      tags:
      - PushTask
  /pushTask/pushMessage:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: PushMessage
      tags:
      - PushTask
  /pushTaskApk/activatePushTaskUninstallApk/{id}:
    put:
      parameters:
      - description: ActivatePushTaskUninstallApk
        in: path
        name: id
        required: true
        type: integer
      - description: update push task
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePushTask'
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ActivatePushTaskUninstallApk
      tags:
      - PushTaskUninstallApk
  /pushTaskApk/createPushTaskUninstallApk:
    post:
      consumes:
      - Application/json
      parameters:
      - description: CreatePushTaskUninstallApk
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PushUninstallApk'
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreatePushTaskUninstallApk
      tags:
      - PushTaskUninstallApk
  /pushTaskApk/deletePushTaskUninstallApk/{id}:
    delete:
      parameters:
      - description: deletePushTaskUninstallApk
        in: path
        name: id
        required: true
        type: integer
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deletePushTaskUninstallApk
      tags:
      - PushTaskUninstallApk
  /pushTaskApk/getPushTaskUninstallApkById/{id}:
    get:
      parameters:
      - description: GetPushTaskUninstallApkById
        in: path
        name: id
        required: true
        type: integer
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetPushTaskUninstallApkById
      tags:
      - pushTaskMessage
  /pushTaskApk/getPushTaskUninstallApkList:
    get:
      consumes:
      - Application/json
      parameters:
      - in: query
        name: actionStatus
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: history
        type: boolean
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: serialNo
        type: string
      - in: query
        name: terminalGroupID
        type: integer
      - in: query
        name: terminalId
        type: integer
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: GetPushTaskUninstallApkList
      tags:
      - PushTaskUninstallApk
  /pushTaskApp/activatePushTaskApp/{id}:
    put:
      parameters:
      - description: ActivatePushTaskApp
        in: path
        name: id
        required: true
        type: integer
      - description: update push task
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePushTask'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ActivatePushTaskApp
      tags:
      - PushTaskApp
  /pushTaskApp/createPushTaskApp:
    post:
      consumes:
      - application/json
      parameters:
      - description: CreatePushTaskApp
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PushTaskAppDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreatePushTaskApp
      tags:
      - PushTaskApp
  /pushTaskApp/deleteParamFile:
    delete:
      parameters:
      - description: DeleteParamFile
        in: query
        name: FileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DeleteParamFile
      tags:
      - PushTaskApp
  /pushTaskApp/deletePushTaskApp/{id}:
    delete:
      parameters:
      - description: deletePushTaskApp
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deletePushTaskApp
      tags:
      - PushTaskApp
  /pushTaskApp/disablePushTaskApp/{id}:
    put:
      parameters:
      - description: disablePushTaskApp
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: disablePushTaskApp
      tags:
      - PushTaskApp
  /pushTaskApp/downloadParamFile:
    get:
      parameters:
      - description: DownloadParameterFile
        in: query
        name: FileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DownloadParameterFile
      tags:
      - PushTaskApp
  /pushTaskApp/getParameterVariableTaskApp/{id}:
    get:
      parameters:
      - description: GetParameterVariableTaskApp
        in: path
        name: id
        required: true
        type: integer
      - description: parameterFileID
        in: query
        name: parameterFileID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetParameterVariableTaskApp
      tags:
      - PushTaskApp
  /pushTaskApp/getPushTaskAppById/{id}:
    get:
      parameters:
      - description: GetPushTaskAppById
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetPushTaskAppById
      tags:
      - PushTaskApp
  /pushTaskApp/getPushTaskAppList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: actionStatus
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: history
        type: boolean
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: serialNo
        type: string
      - in: query
        name: terminalGroupID
        type: integer
      - in: query
        name: terminalId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: pagingPushTaskAppList
      tags:
      - PushTaskApp
  /pushTaskApp/resetPushTaskApp/{id}:
    put:
      parameters:
      - description: resetPushTaskApp
        in: path
        name: id
        required: true
        type: integer
      - in: query
        name: finish
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: resetPushTaskApp
      tags:
      - PushTaskApp
  /pushTaskApp/saveParameterPushTaskApp:
    put:
      parameters:
      - description: save parameter push task
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SavePushTaskSchema'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: savePushTaskApp
      tags:
      - PushTaskApp
  /pushTaskAppGroup/activatePushTaskApp/{id}:
    put:
      parameters:
      - description: ActivatePushTaskApp
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ActivatePushTaskApp
      tags:
      - pushTaskAppGroup
  /pushTaskAppGroup/createPushTaskApp:
    post:
      consumes:
      - application/json
      parameters:
      - description: CreatePushTaskApp
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PushTaskAppGroupDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreatePushTaskApp
      tags:
      - PushTaskAppGroup
  /pushTaskAppGroup/deletePushTaskApp/{id}:
    delete:
      parameters:
      - description: deletePushTaskApp
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deletePushTaskApp
      tags:
      - pushTaskAppGroup
  /pushTaskAppGroup/disablePushTaskApp/{id}:
    put:
      parameters:
      - description: disablePushTaskApp
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: disablePushTaskApp
      tags:
      - PushTaskApp
  /pushTaskAppGroup/getParameterVariableTaskApp/{id}:
    get:
      parameters:
      - description: GetParameterVariableTaskApp
        in: path
        name: id
        required: true
        type: integer
      - description: parameter file id
        in: query
        name: parameterFileID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetParameterVariableTaskApp
      tags:
      - PushTaskApp
  /pushTaskAppGroup/getPushTaskAppById/{id}:
    get:
      parameters:
      - description: GetPushTaskAppById
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetPushTaskAppById
      tags:
      - pushTaskAppGroup
  /pushTaskAppGroup/getPushTaskAppList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: actionStatus
        type: string
      - in: query
        name: appId
        type: integer
      - in: query
        name: appVersionName
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: history
        type: boolean
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: terminalGroupID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: pagingPushTaskAppList
      tags:
      - pushTaskAppGroup
  /pushTaskAppGroup/resetPushTaskApp/{id}:
    put:
      parameters:
      - description: resetPushTaskApp
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: resetPushTaskApp
      tags:
      - PushTaskApp
  /pushTaskAppGroup/saveParameterPushTaskApp:
    put:
      parameters:
      - description: save push task schema group
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SavePushTaskSchemaGroup'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: savePushTaskApp
      tags:
      - PushTaskApp
  /pushTaskFirmware/activatePushTaskFirmware/{id}:
    put:
      parameters:
      - description: ActivatePushTaskFirmware
        in: path
        name: id
        required: true
        type: integer
      - description: update push task
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePushTask'
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ActivatePushTaskFirmware
      tags:
      - PushTaskFirmware
  /pushTaskFirmware/createPushTaskFirmware:
    post:
      consumes:
      - Application/json
      parameters:
      - description: CreatePushTaskFirmware
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.PushTaskFirmwareDTO'
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreatePushTaskFirmware
      tags:
      - PushTaskFirmware
  /pushTaskFirmware/deletePushTaskFirmware/{id}:
    delete:
      parameters:
      - description: deletePushTaskFirmware
        in: path
        name: id
        required: true
        type: integer
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deletePushTaskFirmware
      tags:
      - PushTaskFirmware
  /pushTaskFirmware/disablePushTaskFirmware/{id}:
    put:
      parameters:
      - description: disablePushTaskFirmware
        in: path
        name: id
        required: true
        type: integer
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: disablePushTaskFirmware
      tags:
      - PushTaskFirmware
  /pushTaskFirmware/getPushTaskFirmwareById/{id}:
    get:
      parameters:
      - description: GetPushTaskFirmwareById
        in: path
        name: id
        required: true
        type: integer
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetPushTaskFirmwareById
      tags:
      - PushTaskFirmware
  /pushTaskFirmware/getPushTaskFirmwareList:
    get:
      consumes:
      - Application/json
      parameters:
      - in: query
        name: actionStatus
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: history
        type: boolean
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: serialNo
        type: string
      - in: query
        name: terminalGroupID
        type: integer
      - in: query
        name: terminalId
        type: integer
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: pagingPushTaskFirmwareList
      tags:
      - PushTaskFirmware
  /pushTaskFirmware/resetPushTaskFirmware/{id}:
    put:
      parameters:
      - description: resetPushTaskFirmware
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: resetPushTaskFirmware
      tags:
      - pushTaskFirmware
  /pushTaskFirmwareGroup/activatePushTaskFirmware/{id}:
    put:
      parameters:
      - description: ActivatePushTaskFirmware
        in: path
        name: id
        required: true
        type: integer
      - description: update push task
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePushTask'
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ActivatePushTaskFirmware
      tags:
      - pushTaskFirmwareGroup
  /pushTaskFirmwareGroup/createPushTaskFirmware:
    post:
      consumes:
      - Application/json
      parameters:
      - description: PushTaskFirmwareGroupRequest
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PushTaskFirmwareGroupRequest'
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreatePushTaskFirmware
      tags:
      - pushTaskFirmwareGroup
  /pushTaskFirmwareGroup/deletePushTaskFirmware/{id}:
    delete:
      parameters:
      - description: deletePushTaskFirmware
        in: path
        name: id
        required: true
        type: integer
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deletePushTaskFirmware
      tags:
      - pushTaskFirmwareGroup
  /pushTaskFirmwareGroup/disablePushTaskFirmware/{id}:
    put:
      parameters:
      - description: disablePushTaskFirmware
        in: path
        name: id
        required: true
        type: integer
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: disablePushTaskFirmware
      tags:
      - pushTaskFirmwareGroup
  /pushTaskFirmwareGroup/getPushTaskFirmwareById/{id}:
    get:
      parameters:
      - description: GetPushTaskFirmwareById
        in: path
        name: id
        required: true
        type: integer
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetPushTaskFirmwareById
      tags:
      - pushTaskFirmwareGroup
  /pushTaskFirmwareGroup/getPushTaskFirmwareList:
    get:
      consumes:
      - Application/json
      parameters:
      - in: query
        name: actionStatus
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: history
        type: boolean
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: serialNo
        type: string
      - in: query
        name: terminalGroupID
        type: integer
      - in: query
        name: terminalId
        type: integer
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: pagingPushTaskFirmwareList
      tags:
      - pushTaskFirmwareGroup
  /pushTaskFirmwareGroup/resetPushTaskFirmware/{id}:
    put:
      parameters:
      - description: resetPushTaskFirmware
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: resetPushTaskFirmware
      tags:
      - pushTaskFirmware
  /pushTaskMessage/activatePushTaskMessage/{id}:
    put:
      parameters:
      - description: ActivatePushTaskMessage
        in: path
        name: id
        required: true
        type: integer
      - description: update push task
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePushTask'
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ActivatePushTaskMessage
      tags:
      - PushTaskMessage
  /pushTaskMessage/createPushTaskMessage:
    post:
      consumes:
      - Application/json
      parameters:
      - description: CreatePushTaskMessage
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PushTaskMessageDTO'
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreatePushTaskMessage
      tags:
      - PushTaskMessage
  /pushTaskMessage/deletePushTaskMessage/{id}:
    delete:
      parameters:
      - description: deletePushTaskMessage
        in: path
        name: id
        required: true
        type: integer
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deletePushTaskMessage
      tags:
      - PushTaskMessage
  /pushTaskMessage/getPushTaskMessageById/{id}:
    get:
      parameters:
      - description: GetPushTaskMessageById
        in: path
        name: id
        required: true
        type: integer
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "Data not found","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "create fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetPushTaskMessageById
      tags:
      - pushTaskMessage
  /pushTaskMessage/getPushTaskMessageList:
    get:
      consumes:
      - Application/json
      parameters:
      - in: query
        name: actionStatus
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: history
        type: boolean
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: serialNo
        type: string
      - in: query
        name: terminalGroupID
        type: integer
      - in: query
        name: terminalId
        type: integer
      produces:
      - Application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: GetPushTaskMessageList
      tags:
      - PushTaskMessage
  /report/createReportParameter:
    post:
      consumes:
      - application/json
      parameters:
      - description: report parameter
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/report.ReportParameterDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreateReportParameter
      tags:
      - ReportParameter
  /report/createReportTask:
    post:
      consumes:
      - application/json
      parameters:
      - description: report task
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/report.ReportTaskDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreateReportTask
      tags:
      - ReportTask
  /report/createReportUiComponent:
    post:
      consumes:
      - application/json
      parameters:
      - description: report ui component
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/report.ReportUiComponent'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreateReportUiComponent
      tags:
      - ReportUiComponent
  /report/deleteReportParameter/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: DeleteReportParameter
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DeleteReportParameter
      tags:
      - reportParameter
  /report/deleteReportTask/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: DeleteReportTask
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DeleteReportTask
      tags:
      - reportTask
  /report/deleteReportUiComponent/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: DeleteReportUiComponent
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: '{"code": 7,"message": "idNotFound","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DeleteReportUiComponent
      tags:
      - reportUiComponent
  /report/downloadReportTaskFile/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: 'id '
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DownloadReportTaskFile
      tags:
      - ReportTask
  /report/exportLoginUsersExcel:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - in: query
        name: endDate
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: ips
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: startDate
        type: string
      - in: query
        name: status
        type: string
      - in: query
        name: userEmail
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: exportUsersExcel
      tags:
      - report
  /report/getLoginOperationList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - in: query
        name: endDate
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: ips
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: startDate
        type: string
      - in: query
        name: status
        type: string
      - in: query
        name: userEmail
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: GetLoginLogList
      tags:
      - Organization
  /report/getReportCategory:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetReportCategory
      tags:
      - ReportCategory
  /report/getReportList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: categoryId
        type: integer
      - in: query
        name: orgId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetReportList
      tags:
      - ReportList
  /report/getReportParameterByReportId/{reportId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: 'report id '
        in: path
        name: reportId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetReportParameterByReportId
      tags:
      - ReportParameter
  /report/getReportTaskById/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: 'id '
        in: path
        name: reportId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetReportTaskByReportId
      tags:
      - ReportTask
  /report/getReportTaskByReportId/{reportId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: 'report id '
        in: path
        name: reportId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetReportTaskByReportId
      tags:
      - ReportTask
  /report/getReportUiComponent:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetReportUiComponentByReportId
      tags:
      - ReportUiComponent
  /sysOperationRecord/exportLogExcel:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: actionTime
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: ip
        type: string
      - in: query
        name: method
        type: string
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: path
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: exportLogExcel
      tags:
      - sysOperationRecord
  /sysOperationRecord/findSysOperationRecord/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: queryByIdSysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdSysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/getSysOperationRecordList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: actionTime
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: ip
        type: string
      - in: query
        name: method
        type: string
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: path
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: pagingSysOperationRecordList,return includes list,total,page
            number,Quantity per page
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: pagingSysOperationRecordList
      tags:
      - SysOperationRecord
  /system/getSystemConfig:
    get:
      parameters:
      - description: config
        in: query
        name: config
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: get configure file content,return includes system configure
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get configure file content
      tags:
      - System
  /system/setSystemConfig:
    post:
      parameters:
      - description: setup configure file content
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.System'
      produces:
      - application/json
      responses:
        "200":
          description: setup configure file content
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: setup configure file content
      tags:
      - System
  /terminalGroup/addTerminalToGeneralGroup:
    post:
      consumes:
      - application/json
      parameters:
      - description: AddTerminalToGeneralGroup
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddTerminalsToGeneralGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: addTerminalToGeneralGroup
      tags:
      - TerminalGroup
  /terminalGroup/createDynamicTerminalGroup:
    post:
      consumes:
      - application/json
      parameters:
      - description: createTerminalGroup
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.TerminalGroupDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreateTerminalGroup
      tags:
      - TerminalGroup
  /terminalGroup/createTerminalGroup:
    post:
      consumes:
      - application/json
      parameters:
      - description: createTerminalGroup
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.TerminalGroupDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreateTerminalGroup
      tags:
      - TerminalGroup
  /terminalGroup/deleteTerminalGroup/{id}:
    delete:
      parameters:
      - description: id terminal group
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deleteTerminalGroup
      tags:
      - TerminalGroup
  /terminalGroup/deleteTerminalsToGroup:
    delete:
      consumes:
      - application/json
      parameters:
      - description: delete group to terminal
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddGroupToTerminal'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: DeleteTerminalSNToGroup
      tags:
      - TerminalGroup
  /terminalGroup/findTerminalGroup/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id terminal group
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdTerminalGroup
      tags:
      - TerminalGroup
  /terminalGroup/getTerminalGroupList:
    get:
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: merchantId
        type: integer
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: status
        type: string
      produces:
      - application/json"
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: pagingTerminalGroupList
      tags:
      - TerminalGroup
  /terminalGroup/getTerminalsByTerminalGroup:
    get:
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - in: query
        name: merchantId
        type: integer
      - in: query
        name: name
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: status
        type: string
      produces:
      - application/json"
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: getTerminalsByTerminalGroup
      tags:
      - TerminalGroup
  /terminalGroup/importTerminalToGroup/{id}:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: ImportModelExcel
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: ImportModelExcel
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "data excel fail","result": {},"type":
            "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ImportModelExcel
      tags:
      - model
  /terminalGroup/updateTerminalGroup/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id terminal group
        in: path
        name: id
        required: true
        type: integer
      - description: updateTerminalGroup
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.TerminalGroupDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: updateTerminalGroup
      tags:
      - TerminalGroup
  /terminalGroup/updateTerminalGroupStatus/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id terminal group
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateTerminalGroupStatus
      tags:
      - TerminalGroup
  /terminalInfo/getFirmwareInstalled/{id}:
    get:
      parameters:
      - description: GetFirmwareInstalled
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: '{"code": 7,"message": "Bad Request","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetFirmwareInstalled
      tags:
      - firmwareInstalled
  /terminalInfo/getTerminalConfiguration/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Terminal id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetTerminalConfiguration
      tags:
      - TerminalInfo
  /terminalInfo/getTerminalInfo/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Terminal id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetTerminalInfoById
      tags:
      - TerminalInfo
  /terminalInfo/getTerminalLocation/{tid}:
    get:
      consumes:
      - application/json
      parameters:
      - description: tid
        in: path
        name: tid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetTerminalLocation
      tags:
      - TerminalInfo
  /terminalInfo/getTerminalLocationList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgID
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: serialNo
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetTerminalLocationList
      tags:
      - TerminalInfo
  /terminalInfo/getTerminalMonitor/{tid}:
    get:
      consumes:
      - application/json
      parameters:
      - description: tid
        in: path
        name: tid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetTerminalMonitor
      tags:
      - TerminalInfo
  /terminalInfo/getTerminalStatistics/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Terminal id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetTerminalStatistics
      tags:
      - TerminalInfo
  /terminalInfo/getTerminalTraffic/{tid}:
    get:
      consumes:
      - application/json
      parameters:
      - description: tid
        in: path
        name: tid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetTerminalTraffic
      tags:
      - TerminalInfo
  /terminalInfo/restartTerminal/{serial}:
    get:
      consumes:
      - application/json
      parameters:
      - description: serial
        in: path
        name: serial
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: RestartTerminal
      tags:
      - TerminalInfo
  /terminalInfo/sendInfoCommand/{serial}:
    get:
      consumes:
      - application/json
      parameters:
      - description: GetTerminalMonitor
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.TerminalInfoDTO'
      - description: serial
        in: path
        name: serial
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetTerminalMonitor
      tags:
      - TerminalInfo
  /terminalInfo/sendMessage/{serial}:
    post:
      consumes:
      - application/json
      parameters:
      - description: serial
        in: path
        name: serial
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: SendMessage
      tags:
      - TerminalInfo
  /terminalInfo/updateHardwareControl/{serial}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Update Hardware control
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.HardwareControl'
      - description: serial
        in: path
        name: serial
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 0,"message": "DataFail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetTerminalMonitor
      tags:
      - TerminalInfo
  /terminalLogCat/collectLogCatFile/{serial}:
    get:
      parameters:
      - description: serial
        in: path
        name: serial
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CollectLogCatFile
      tags:
      - TerminalLogCat
  /terminalLogCat/createTerminalLogCatFile/{serial}:
    post:
      consumes:
      - application/json
      parameters:
      - description: CreateTerminalLogCatFile
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ParsingFile'
      - description: serial
        in: path
        name: serial
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreateTerminalLogCatFile
      tags:
      - TerminalLogCat
  /terminalLogCat/downloadLogCatFile/{serial}:
    get:
      parameters:
      - description: serial
        in: path
        name: serial
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: '{"code": 7,"message": "Data Fail","result": {},"type": "fail"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DownloadsLogCatFile
      tags:
      - TerminalLogCat
  /terminalSN/batchTerminalDisable:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: terminal disable
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReqStr'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: batchTerminalDisable
      tags:
      - TerminalSN
  /terminalSN/batchTerminalMove:
    put:
      consumes:
      - application/json
      parameters:
      - description: batch move terminal
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.BatchMoveTerminal'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateTerminalSNStatus
      tags:
      - TerminalSN
  /terminalSN/createTerminalSN:
    post:
      consumes:
      - application/json
      parameters:
      - description: createTerminalSN
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.TerminalDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: createTerminalSN
      tags:
      - TerminalSN
  /terminalSN/deleteTerminalSN/{id}:
    delete:
      parameters:
      - description: terminal sn id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deleteTerminalSN
      tags:
      - TerminalSN
  /terminalSN/deleteTerminalSNByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: batch delete TerminalSN
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "delete Success","result": {},"type":
            "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: batch delete TerminalSN
      tags:
      - TerminalSN
  /terminalSN/downloadTerminalSNTemplate:
    get:
      consumes:
      - multipart/form-data
      parameters:
      - description: templateName
        in: query
        name: fileName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: loadTerminalSNtemplate
      tags:
      - TerminalSN
  /terminalSN/exportTerminalSNExcel:
    get:
      consumes:
      - application/json
      parameters:
      - description: Created in specific time with second and
        in: query
        name: created
        type: integer
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: created in this day
        in: query
        name: createdDay
        type: integer
      - description: created in this month
        in: query
        name: createdMonthly
        type: integer
      - description: created in this year
        in: query
        name: createdYear
        type: integer
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - description: Quantity     int    `json:"quantity" form:"quantity"`
        in: query
        name: location
        type: string
      - in: query
        name: ManufacturerId
        type: integer
      - in: query
        name: merchantId
        type: integer
      - in: query
        name: modelId
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: onlineStatus
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: serialNo
        type: string
      - in: query
        name: status
        type: string
      - in: query
        name: subOrg
        type: boolean
      - description: '[ a | y | m | d]'
        in: query
        name: tQuery
        type: string
      - in: query
        name: tid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: exportTerminalSNExcel
      tags:
      - TerminalSN
  /terminalSN/findTerminalBySerialNo/{id}:
    get:
      parameters:
      - description: terminal sn id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdTerminalSN
      tags:
      - TerminalSN
  /terminalSN/findTerminalSN/{id}:
    get:
      parameters:
      - description: terminal sn id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: queryByIdTerminalSN
      tags:
      - TerminalSN
  /terminalSN/getDashboardTerminals:
    get:
      parameters:
      - in: query
        name: dashboard
        type: boolean
      - in: query
        name: merchantId
        type: integer
      - description: '[o -> organization | m -> merchant]'
        in: query
        name: role
        type: string
      - description: '[Unknown | active | inactive] - [online | offline]'
        in: query
        name: status
        type: string
      - in: query
        name: subOrg
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: getDashboardTerminals
      tags:
      - TerminalSN
  /terminalSN/getMerchantsTerminalsCount:
    get:
      parameters:
      - in: query
        name: dashboard
        type: boolean
      - in: query
        name: merchantId
        type: integer
      - description: '[o -> organization | m -> merchant]'
        in: query
        name: role
        type: string
      - description: '[Unknown | active | inactive] - [online | offline]'
        in: query
        name: status
        type: string
      - in: query
        name: subOrg
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: getMerchantsTerminalsCount
      tags:
      - TerminalSN
  /terminalSN/getModelsTerminalsCount:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetDistinctModelsTerminals
      tags:
      - TerminalSN
  /terminalSN/getOrgsTerminalsCount:
    get:
      parameters:
      - in: query
        name: dashboard
        type: boolean
      - in: query
        name: merchantId
        type: integer
      - description: '[o -> organization | m -> merchant]'
        in: query
        name: role
        type: string
      - description: '[Unknown | active | inactive] - [online | offline]'
        in: query
        name: status
        type: string
      - in: query
        name: subOrg
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: getOrgsTerminalsCount
      tags:
      - TerminalSN
  /terminalSN/getTerminalGroupByTerminal/{id}:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json"
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: getTerminalGroupByTerminals
      tags:
      - TerminalSN
  /terminalSN/getTerminalSNList:
    get:
      parameters:
      - description: Created in specific time with second and
        in: query
        name: created
        type: integer
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: created in this day
        in: query
        name: createdDay
        type: integer
      - description: created in this month
        in: query
        name: createdMonthly
        type: integer
      - description: created in this year
        in: query
        name: createdYear
        type: integer
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - description: Quantity     int    `json:"quantity" form:"quantity"`
        in: query
        name: location
        type: string
      - in: query
        name: ManufacturerId
        type: integer
      - in: query
        name: merchantId
        type: integer
      - in: query
        name: modelId
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: onlineStatus
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: serialNo
        type: string
      - in: query
        name: status
        type: string
      - in: query
        name: subOrg
        type: boolean
      - description: '[ a | y | m | d]'
        in: query
        name: tQuery
        type: string
      - in: query
        name: tid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: pagingTerminalSNlist
      tags:
      - TerminalSN
  /terminalSN/getTerminalsCount:
    get:
      parameters:
      - description: Created in specific time with second and
        in: query
        name: created
        type: integer
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - description: created in this day
        in: query
        name: createdDay
        type: integer
      - description: created in this month
        in: query
        name: createdMonthly
        type: integer
      - description: created in this year
        in: query
        name: createdYear
        type: integer
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - description: Quantity     int    `json:"quantity" form:"quantity"`
        in: query
        name: location
        type: string
      - in: query
        name: ManufacturerId
        type: integer
      - in: query
        name: merchantId
        type: integer
      - in: query
        name: modelId
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: onlineStatus
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: serialNo
        type: string
      - in: query
        name: status
        type: string
      - in: query
        name: subOrg
        type: boolean
      - description: '[ a | y | m | d]'
        in: query
        name: tQuery
        type: string
      - in: query
        name: tid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: getTerminalsCount
      tags:
      - TerminalSN
  /terminalSN/importTerminalSNExcel:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: ImportTerminalSNExcel
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: ImportTerminalSNExcel
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ImportTerminalSNExcel
      tags:
      - TerminalSN
  /terminalSN/moveTerminalSN/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: MoveTerminalSNTemplate
      tags:
      - TerminalSN
  /terminalSN/updateTerminalSN/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: terminal sn id
        in: path
        name: id
        required: true
        type: integer
      - description: updateTerminalSN
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tms.TerminalDTO'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: updateTerminalSN
      tags:
      - TerminalSN
  /terminalSN/updateTerminalSNStatus/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateTerminalSNStatus
      tags:
      - TerminalSN
  /user/changePassword:
    put:
      parameters:
      - description: username, original password, new password
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: User update password
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: User update password
      tags:
      - SysUser
  /user/deleteUser/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleteUser
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: deleteUser
      tags:
      - SysUser
  /user/disableUser/{email}:
    put:
      parameters:
      - description: email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User update password
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: User update password
      tags:
      - SysUser
  /user/exportUsersExcel:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: authorityId
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - in: query
        name: email
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: exportUsersExcel
      tags:
      - SysUser
  /user/getUserById/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: get user info
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get user info
      tags:
      - SysUser
  /user/getUserInfo:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: get user info
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get user info
      tags:
      - SysUser
  /user/getUserList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: authorityId
        type: string
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - in: query
        name: email
        type: string
      - description: PDF || Excel
        in: query
        name: format
        type: string
      - description: ASC ||  default= DESC|
        in: query
        name: order
        type: string
      - in: query
        name: orgId
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: pageSize
        type: integer
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: pagingUser list
      tags:
      - SysUser
  /user/logout:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: return includes user info,token,expiration
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User logout
      tags:
      - Base
  /user/register:
    post:
      parameters:
      - description: username, password, roleID, orgID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: User registered account,return includes user info
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User registered account
      tags:
      - SysUser
  /user/resendRegister/{email}:
    get:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: admin resetUser password
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Admin Register
      tags:
      - SysUser
  /user/resetPassword/{id}:
    put:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: resetUser password
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: resetUser password
      tags:
      - SysUser
  /user/setUserAuthority:
    put:
      consumes:
      - application/json
      parameters:
      - description: User UUID, roleID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuth'
      produces:
      - application/json
      responses:
        "200":
          description: setupUser permission
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: changeUser permission
      tags:
      - SysUser
  /user/setUserInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: phone, headerImg
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChangeUserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: setup user info
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: setup user info
      tags:
      - SysUser
  /user/uploadProfile:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: uploadFile
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0,"message": "DataSuccess","result": {},"type": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: UploadImageProfile
      tags:
      - SysUser
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
